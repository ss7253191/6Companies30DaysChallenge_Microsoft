// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution
{
    public:
    //Function to find unit area of the largest region of 1s.
    bool v[510][510];
    int dfs(vector<vector<int>>& grid,int i,int j,int par){
        int res=0;
        if(i<0 || j<0)return 0;
        if(i>=grid.size() || j>= grid[0].size())return 0;
        if(v[i][j] && par==1)return 0;
        v[i][j]=true;
        if(grid[i][j]==0)return 0;
        res+=1;
        par=grid[i][j];
        res+=dfs(grid,i+1,j,par);
        res+=dfs(grid,i,j+1,par);
        res+=dfs(grid,i-1,j,par);
        res+=dfs(grid,i,j-1,par);
        res+=dfs(grid,i+1,j+1,par);
        res+=dfs(grid,i+1,j-1,par);
        res+=dfs(grid,i-1,j+1,par);
        res+=dfs(grid,i-1,j-1,par);
        return res;
    }
    
    int findMaxArea(vector<vector<int>>& grid) {
        // Code here
        int n=grid.size();
        int m=grid[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                v[i][j]=false;
            }
        }
        int ans=0,par=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(v[i][j])continue;
                int mx=dfs(grid,i,j,par);
                if(mx>ans)ans=mx;
            }
        }
        return ans;
    }
};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n, m;
		cin >> n >> m;
		vector<vector<int>>grid(n, vector<int>(m, -1));
		for(int i = 0; i < n; i++){
			for(int j = 0; j < m; j++){
				cin >> grid[i][j];
			}
		}
		Solution obj;
		int ans = obj.findMaxArea(grid);
		cout << ans << "\n";
	}
	return 0;
}  // } Driver Code Ends
