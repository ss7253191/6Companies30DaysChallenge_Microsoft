// { Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 

 // } Driver Code Ends
class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > m, int r, int c) 
    {
        // code here 
        vector<int> v(r*c,0);
        int k=0,p=0;
        int x=0,y=c-1,z=r-1,f=0;
        /*int pp=17;*/
        while(k<r*c){
            p=p%4;
            if(p==0){
                
                for(int i=f;i<c-x;i++){
                    v[k]=m[x][i];
                    k+=1;
                }
                x++;
            }
            else if(p==1){
                for(int i=x;i<r-f;i++){
                    v[k]=m[i][y];
                    k++;
                }
                y--;
            }
            else if(p==2){
                for(int i=y;i>=0+f;i--){
                    v[k]=m[z][i];
                    k++;
                }
                z--;
            }
            else if(p==3){
                for(int i=z;i>=0+x;i--){
                    v[k]=m[i][f];
                    k++;
                }
                f++;
            }
            p+=1;
        }
        return v;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin>>t;
    
    while(t--) 
    {
        int r,c;
        cin>>r>>c;
        vector<vector<int> > matrix(r); 

        for(int i=0; i<r; i++)
        {
            matrix[i].assign(c, 0);
            for( int j=0; j<c; j++)
            {
                cin>>matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix, r, c);
        for (int i = 0; i < result.size(); ++i)
                cout<<result[i]<<" ";
        cout<<endl;
    }
    return 0;
}  // } Driver Code Ends
